---
id: https://w3id.org/my-org/validate_schema
name: validate_schema
title: validate_schema
description: |-
  Validate each of the incoming Algorithm's spec file

prefixes:
  default_range: string

imports:
  - linkml:types

classes:
  Any:
    description: "Any type"
    class_uri: linkml:Any

  Container:
    description: "Container class which holds all the high_level keywords from config.yaml file of specific algorithm"
    slots: 
    - inputs
    - outputs
    - parameters
    - display_only
    - results
    - exec_function
    - docker_image
    - algorithm_folder_name
    - citations

  AbstractWorkflowDetails:
    aliases: ["inputs", "outputs"]
    description: "Abstract class for details needed to fit config in the workflow"
    abstract: true
    slots:
      - name
      - type
      - description
      - optional
      - path
      - format
      - collection
      # Conditional w.r.t to type (if type == image, then include below flags)
      - subtype
      - z
      - t
      - tiled
      - pyramidal
       
  TypeInput:
    aliases: ["inputs"]
    description: "Inputs to the algorithm from the last step of the workflow"
    is_a: AbstractWorkflowDetails
    rules: 
      - description: "Extra flags needed iff type is image"
        preconditions:
          slot_conditions:
            type:
              equals_string: "image"
        postconditions:
          slot_conditions:
            subtype:
              required: true
            z:
              required: true
            t:
              required: true
            tiled:
              required: true
            pyramidal:
              required: true
  
  TypeOutput:
    aliases: ["outputs"]
    description: "Outputs of the algorithm to the next step in the workflow"
    is_a: AbstractWorkflowDetails
    rules: 
      - description: "Extra flags needed iff type is image"
        preconditions:
          slot_conditions:
            type:
              equals_string: "image"
        postconditions:
          slot_conditions:
            subtype:
              required: true
            z:
              required: true
            t:
              required: true
            tiled:
              required: true
            pyramidal:
              required: true

  AbstractUserInterface:
    aliases: ["parameters", "display_only", "results"]  
    description: "Abstract class for user interface"
    abstract: true
    slots:
      - name
      - type
      - label
      - description
      - optional
      - section_id
      - mode
      # Conditional w.r.t to type
      - output_dir_set
      - folder_name
      - file_count
      - options
      - interactive
      - append_value
      - multiselect
    rules:
      - description: "Extra flags needed iff type is checkbox"
        preconditions:
          slot_conditions:
            type:
              equals_string: "checkbox"
        postconditions:
          slot_conditions:
            append_value:
              required: true
      - description: "Extra flags needed iff type is files"
        preconditions:
          slot_conditions:
            type:
              equals_string: "files"
        postconditions:
          slot_conditions:
            file_count:
              required: true
      - description: "Extra flags needed iff type is radio"
        preconditions:
          slot_conditions:
            type:
              equals_string: "radio"
        postconditions:
          slot_conditions:
            options:
              required: true
      - description: "Extra flags needed iff type is dropdown"
        preconditions:
          slot_conditions:
            type:
              equals_string: "dropdown"
        postconditions:
          slot_conditions:
            options:
              required: true
            multiselect:
              required: true
     
  TypeParameter:
    aliases: ["parameters"]
    description: "Parameters of a specific Algorithm"
    is_a: AbstractUserInterface
    slots:
      - default
      - cli_tag
      - cli_order
    rules:
      - description: "Extra flags needed iff type is files"
        preconditions:
          slot_conditions:
            type:
              equals_string: "files"
        postconditions:
          slot_conditions:
            folder_name:
              required: true

  TypeDisplayOnly:
    aliases: ["display_only"]
    description: "Display only parameters of a specific Algorithm"
    is_a: AbstractUserInterface
    slots:
      - default
    rules:
      - description: "Extra flags needed iff type is files"
        preconditions:
          slot_conditions:
            type:
              equals_string: "files"
        postconditions:
          slot_conditions:
            folder_name:
              required: true

  TypeResults:
    aliases: ["results"]
    description: "Results of a specific Algorithm"
    is_a: AbstractUserInterface
    slots:
      - cli_tag

  ExecFunction:
    aliases: ["exec_function", "generate_cli_command", "construct_cli_command"]
    description: "Function to execute the Algorithm"
    slots:
      - name
      - script
      - module
      - cli_command
      - hidden_args

  DockerImage:
    aliases: ["docker_image"]
    description: "Description of docker_image for the specific algorithm"
    slots:
      - org
      - name
      - tag
      - platform

  TypeCitations:
    aliases: ["citations"]
    description: "Citations of the Algorithm"
    slots:
      - algorithm
  
  TypeAlgorithmFromCitation:
    aliases: ["Algorithm", "citations"]
    description: "Algorithm's citations"
    slots:
      - name
      - doi
      - license
      - description

  HiddenArgs:
    description: "Hidden arguments for the Algorithm"
    attributes:
      cli_tag:
        range: string
        required: true
      value:
        range: string
        required: true
      append_value:
        range: boolean
        required: false
      cli_order:  
        range: integer
        required: false
  
  RadioOptions:
    description: "Options of the Radio button in parameters, display_only, results"
    slots:
      - label
      - value

slots:
  inputs:
    description: "Inputs to the algorithm from the last step of the workflow"
    range: TypeInput
    multivalued: true
    required: true
  outputs:
    description: "Outputs of the algorithm to the next step in the workflow"
    range: TypeOutput
    multivalued: true
    required: true
  parameters:
    description: "Parameters of a specific Algorithm"
    range: TypeParameter
    multivalued: true
    required: true
  display_only:
    description: "Display only parameters of a specific Algorithm"
    range: TypeDisplayOnly
    multivalued: true
  results:
    description: "Results of a specific Algorithm"
    range: TypeResults
    multivalued: true
    required: true
  exec_function:
    description: "Function to execute the Algorithm"
    range: ExecFunction
    required: true
  script:
    description: "Script to execute the Algorithm"
    range: string
    required: true
  module:
    description: "Module to execute the Algorithm"
    range: string
    required: true
  cli_command:
    description: "CLI command to execute the Algorithm"
    range: string
    required: true
  hidden_args:
    description: "Hidden arguments for the Algorithm"
    multivalued: true
    range: HiddenArgs
  docker_image:
    description: "Description of docker_image for the specific algorithm"
    range: DockerImage
  org: 
    description: "Organization of the docker image"
    required: true
    range: string
  name:
    description: "Name of the docker_image, algorithm, parameter, display_only, results"
    required: true
    range: string
  tag:
    description: "Tag of the docker image"
    required: true
    range: string
  platform:
    description: "Platform on which the docker image was built"
    required: true
    range: string
  algorithm_folder_name:
    description: "Main folder name of the algorithm to put the generated files in the folder"
    range: string
  citations:
    description: "Citations of the Algorithm"
    range: TypeCitations
    required: true
  algorithm:
    description: "Algorithm's citations"
    required: true
    range: TypeAlgorithmFromCitation
    multivalued: true
  doi:
    description: "DOI of the Algorithm"
    range: string
  license:
    description: "License of the Algorithm"
    range: string
  description:
    description: "Description of the Algorithm"
    range: string
  type:
    description: "Type of the inputs, parameters and outputs"
    required: true
    range: TypeEnum
  label:
    description: "Label of the object, but also Radio button's label"
    required: true
    range: Any
  default:
    description: "Default value of the parameter"
    required: true
    range: Any
  cli_tag:
    description: "CLI tag of the object"
    required: true
    range: string
  optional:
    description: "Optional value of the object"
    required: true
    range: boolean
  section_id:
    description: "Section ID of the object"
    required: true
    range: string
  mode:
    description: "Mode of the object"
    required: true
    range: ModeEnum
  output_dir_set:
    description: "Output directory set"
    required: false
    range: boolean
  folder_name:
    description: "Folder name of the object"
    range: string
    required: false
  file_count:
    description: "Type of Number of files"
    range: FileTypeEnum
    required: false
  options:
    description: "Options of the Radio button in parameters, display_only, results" 
    range: RadioOptions
    multivalued: true
    required: false
  value:
    description: "Value of the hidden argument or RadioButton Option's Value"
    range: Any
  interactive:
    description: "Whether the object is interactive on UI"
    required: false
    range: boolean
  append_value:
    description: "Append value of the hidden argument"
    required: false
    range: boolean
  multiselect:
    description: "Multiselect value of the dropdown"
    required: false
    range: boolean
  cli_order:
    description: "Order of the CLI arguments"
    required: false
    range: integer
  # slots specific to inputs and outputs
  path:
    description: "Path of the inputs and outputs"
    range: string
  format:
    description: "Format of the inputs and outputs"
    range: string
    multivalued: true
  collection:
    description: "Collection of the inputs and outputs"
    range: boolean
  # slots specific to inputs and outputs, if type is image
  subtype:
    description: "Subtype of the inputs and outputs"
    range: SubTypeEnum
    multivalued: true
  z:
    description: "whether z-dimension is accepted via tool"
    range: boolean
  t: 
    description: "whether t-dimension is accepted via tool"
    range: boolean
  tiled:
    description: "whether tiled images are accepted via tool"
    range: boolean
  pyramidal:
    description: "whether pyramidal images are accepted via tool"
    range: boolean
  
  

enums:
  TypeEnum:
    description: "Type of the parameters, display_only, results"
    permissible_values:
      integer:
      float:
      boolean:
      checkbox:
      files:
      dropdown:
      radio:
      textbox:
      # types for inputs and outputs
      image:
      measurement:
      array:
      file:
      executable:
  ModeEnum:
    description: "Mode of the parameters, display_only, results"
    permissible_values:
      beginner:
      advanced:
  FileTypeEnum:
    description: "Type of Number of files"
    permissible_values:
      single:
      multiple:
  # enums specific to inputs and outputs
  SubTypeEnum:
    description: "Subtype of the inputs and outputs, iff type is image"
    permissible_values:
      grayscale:
      color:
      binary:
      labeled:
  