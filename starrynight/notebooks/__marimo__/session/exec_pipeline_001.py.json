{
  "version": "1",
  "metadata": {
    "marimo_version": "0.11.30"
  },
  "cells": [
    {
      "id": "Hbol",
      "code_hash": "b434a9967ea06bb56492f5e8391d52f2",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "kWhL",
      "code_hash": null,
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "arBd",
      "code_hash": null,
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "EIPH",
      "code_hash": null,
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<pre style='font-size: 12px'>DataConfig(dataset_path=PosixPath(&#x27;/datastore/ip-merck-dev/projects/cpg1234-AMD-screening&#x27;), storage_path=PosixPath(&#x27;/datastore/ip-merck-dev/projects/cpg1234-AMD-screening&#x27;), workspace_path=PosixPath(&#x27;/datastore/ip-merck-dev/projects/cpg1234-AMD-screening/workspace&#x27;))</pre>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "MJUe",
      "code_hash": "5d11b2d0a914598a08672a3f1a2f5bf7",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "vblA",
      "code_hash": "5970236690af795b8a77278c3dd03e7b",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "bkHC",
      "code_hash": "e576fc987c84c793f545c1f924eab999",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": [
        {
          "type": "stream",
          "name": "stdout",
          "text": "<pipecraft.pipeline.Seq object at 0x7efc6cd12310>\n"
        }
      ]
    },
    {
      "id": "lEQa",
      "code_hash": null,
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "The variable 'gen_inv_mod' was defined by another cell",
          "traceback": []
        }
      ],
      "console": [
        {
          "type": "stream",
          "name": "stdout",
          "text": "GenInvModule(spec=Container(inputs=[TypeInput(name='dataset_path', type='files', description='Path to the dataset.', optional=False, path='/datastore/ip-merck-dev/projects/cpg1234-AMD-screening', format=None, collection=None, subtype=None, z=None, t=None, tiled=None, pyramidal=None)], outputs=[TypeOutput(name='project_inventory', type='file', description='Generated Inventory', optional=False, path='/datastore/ip-merck-dev/projects/cpg1234-AMD-screening/workspace/inventory/inventory.parquet', format=None, collection=None, subtype=None, z=None, t=None, tiled=None, pyramidal=None)], parameters=[], display_only=[], results=[], exec_function=ExecFunction(name='', script='', module='', cli_command='', hidden_args=None), docker_image=None, algorithm_folder_name=None, citations=TypeCitations(algorithm=[TypeAlgorithmFromCitation(name='Starrynight inventory module', doi=None, license=None, description='This module generates an inventory for the dataset.')])), pipe=<pipecraft.pipeline.Seq object at 0x7efce65bdd90>, uow=[UnitOfWork(inputs={}, outputs={'inventory': ['/datastore/ip-merck-dev/projects/cpg1234-AMD-screening/workspace/inventory/inventory.parquet']})])\n"
        }
      ]
    },
    {
      "id": "FLbe",
      "code_hash": null,
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "GDGc",
      "code_hash": null,
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "zHer",
      "code_hash": "88e5e46bc50e5c3e38b048248417468a",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><h2 id=\"setting-up-dataset-path\">Setting up dataset path</h2></span>"
          }
        }
      ],
      "console": []
    }
  ]
}